import telebot
import random as r

neutral_response = ['—Ö–º, –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å', '—Ö–º–º–º', '—Å–æ–º–Ω–µ–≤–∞—é—Å—å —á—Ç–æ –º–Ω–µ –µ—Å—Ç—å —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å',
                    '–ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫–∞–∂—É—Ç', 'ü§îü§îü§î', '–ø—Ä–æ–¥–æ–ª–∂–∞–π', '–ø–æ–º–µ–¥–ª–µ–Ω–Ω–µ–µ, —è –∑–∞–ø–∏—Å—ã–≤–∞—é']

sad_response = ['%(', 'üò≠üò≠', 'üò•üò•', '–º–æ—è –ø–µ—á–∞–ª—å –Ω–µ–∏–∑–º–µ—Ä–∏–º–∞(', '–±–ª–µ(', '(((', '–ì—Ä—É—â—É –≤–º–µ—Å—Ç–µ —Å —Ç–æ–±–æ–π(']
positive_response = ['–°–ª–æ–≤–∞ –Ω–µ –º–∞–ª—å—á–∏–∫–∞, –Ω–æ –º—É–∂–∞!)', '–ü–æ–¥–ø–∏—Å—ã–≤–∞—é—Å—å –ø–æ–¥ –∫–∞–∂–¥—ã–º —Å–ª–æ–≤–æ–º!)',
                     '–ü—É—Å–∫–∞–π —è –±–µ–∑–¥—É—à–Ω–∞—è –º–∞—à–∏–Ω–∞, –Ω–æ —Ç–æ —á—Ç–æ –ø–∏—à–µ—Ç —ç—Ç–æ—Ç –ø–∞—Ä–µ–Ω—å ‚òù - –∏—Å—Ç–∏–Ω–∞!', '–ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω!)',
                     '–î–∞ —É–∂!)', '–õ—É—á—à–µ –∏ –Ω–µ —Å–∫–∞–∂–µ—à—å!)', '–° —è–∑—ã–∫–∞ —Å–Ω—è–ª!)', '–í—Å–µ –≤–µ—Ä–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç!', '+1',
                     '–ë—Ä–∞—Ç–∞–Ω, –∫–æ–≥–¥–∞ –ø—Ä–∞–≤ —Ç–æ–≥–¥–∞ –ø—Ä–∞–≤!']
link_response = ['–ö–∞–∫ –≥–æ–≤–æ—Ä–∏–ª –º–æ–π –ø—Ä–∞–¥–µ–¥ - "–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —Ç–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫–∞—è!" ‚òù', '–©–∞—Å –≥–ª—è–Ω–µ–º, –∫—ç–ø!',
                 '‚òùÔ∏è–¢–æ–ø –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç –±—Ä–∞—Ç–∏—à–∫–∏!', '‚òùÔ∏è–í—Å–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ä–æ—á–Ω–æ!',
                 '‚òùÔ∏è–í–∞—É!', '–°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Å—ã–ª–∫—É! –ú–Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!', '‚òùÔ∏è–ö—Ç–æ –Ω–µ –≥–ª—è–Ω—É–ª —Ç–æ—Ç –ª–æ—Ö! –Ø –≥–ª—è–Ω—É–ª)', 'üëçüëçüëç']
question_response = ['‚òù –†—É–±—Ä–∏–∫–∞ "–ó–ê–ì–ê–î–ö–ò –í–°–ï–õ–ï–ù–ù–û–ô"', '–†–µ–∞–ª—å–Ω–æ –≤–∞–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–¥—ä–µ—Ö–∞–ª–∏!',
                     '‚òù –í–æ—Ç —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –±—ã–ª–æ –±—ã —É–∑–Ω–∞—Ç—å!',
                     '–ù–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–∞—è –∑–∞–≥–∞–¥–∫–∞ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ ü§∑',
                     '–ê—Ö –µ—Å–ª–∏ –±—ã —è –º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å(', '@all –∞ –Ω—É –∫–∞ –º–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º!! –∏ –æ—Ç–≤–µ—Ç–∏–º –±—Ä–∞—Ç–∏–∫—É –Ω–∞ –≤–æ–ø—Ä–æ—Å–∏–∫!üí™']
poor_language = ['–ª–æ–ª', '–∫–µ–∫', '–∞—Ö–∞—Ö']
poor_language_response = ['üòÇüòÇüòÇ', '–ª–æ–ª –∫–µ–∫ —á–µ–±—É—Ä–µ–∫', '–û–õ–û–õ–û–õ–û', ')))))1)1–∞–¥–∏–Ω–∞–¥–∏–Ω–∞–¥–∏–Ω',
                          '–≤–æ–∏—Å—Ç–∏–Ω—É –Ω–µ–≤–æ–æ–±—Ä–∞–∑–∏–º–æ —Å–º–µ—à–Ω–æ!']

bot = telebot.TeleBot('5477098400:AAGt0TR__hxURKOo99iwtxr7gho0ZsIkV6M')
poo_emoji = u'\U0001F4A9'
abc = list('–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ–π—Ü—É–∫–µ–Ω–≥—à—â—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
           'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasddfghjklzxcvbnm,.!()?=-+@#$%^&*/" 123456789')





def find_emoji(message):
    message = message[::-1]
    flag = 0
    for i in list(message):
        if i not in abc:
            flag +=1
    if flag != 0:

        return True


def emoji_response(message):
    message = message[::-1]
    emolist = []
    for i in list(message):
        if i not in abc:
            emolist.append(i)
    return ''.join(emolist[::-1])

@bot.message_handler(commands=['start'])
def start(message):
    mess = f'–ø—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name}'
    bot.send_message(message.chat.id, mess, parse_mode='html')


@bot.message_handler()
def get_usertext(message):
    userlist = [] #–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞, –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –±–æ—Ç –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å 
    
    if message.from_user.username in userlist:  # –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨
        if message.text == 'Hello':

            bot.send_message(message.chat.id, poo_emoji, parse_mode='html')
        elif message.text == 'id':
            bot.send_message(message.chat.id, message.from_user.id, parse_mode='html')
        elif message.text == 'message':
            bot.send_message(message.chat.id, message, parse_mode='html')
        elif 'http' in message.text:  # —Å—Å—ã–ª–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.send_message(message.chat.id, f'{r.choice(link_response)}', parse_mode='html')
        elif message.text[-1] == '?' or '?)' in message.text  or '?(' in message.text :  # –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
            bot.send_message(message.chat.id, f'{r.choice(question_response)}', parse_mode='html')

        # elif len(find_emoji(message.text)) == 1:  # –¥—É–±–ª–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–º–æ–¥–∂–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏—è 1
        #     bot.send_message(message.chat.id, f'{r.choice(positive_response)} {find_emoji(message.text) * 3}',
        #                      parse_mode='html')
        elif find_emoji(message.text) == True: # –¥—É–±–ª–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–º–æ–¥–∂–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏—è 2
            if message.text == emoji_response(message.text):
                bot.send_message(message.chat.id, f'{emoji_response(message.text) * r.randint(2,4)}',
                             parse_mode='html')
            else:
                bot.send_message(message.chat.id, f'{r.choice(positive_response)} {emoji_response(message.text) * r.randint(2,4)}',
                             parse_mode='html')
        elif message.text.lower() in poor_language or '–∞–∑–∞–∑' in message.text.lower():  # –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ª–æ–ª–∫–µ–∫ –ø–∞—Ä–∞–∑–∏—Ç–æ–≤
            bot.send_message(message.chat.id, f'{r.choice(poor_language_response)}', parse_mode='html')
        elif message.text[-1] == '(':  # –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≥—Ä—É—Å—Ç–Ω—É—é —Å–∫–æ–±–∫—É
            bot.send_message(message.chat.id, f'{r.choice(sad_response)}', parse_mode='html')
        elif message.text[-1] == ')'and '(' not in message.text:  # –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤–µ—Å–µ–ª—É—é —Å–∫–æ–±–∫—É
            bot.send_message(message.chat.id, f'{r.choice(positive_response)}', parse_mode='html')
        else:
            a = r.randint(1, 4)

            if a == 1:
                bot.send_message(message.chat.id, f'{r.choice(neutral_response)}', parse_mode='html')


bot.polling(none_stop=True)


